load("E:/RNAseqProject/NEWPROJECT_PAPERS/Classical paper/DE_Comparison of methods to detect differentially/BAY_scale_10/BAY_scale_10_allround.RData")


source("E:/RNAseqProject/TSTAT_140817.r")
source("E:/RNAseqProject/MANY_DE_FUN.R")
source("E:/RNAseqProject/MANY_NORM_FUN.R")

load("E:/RNAseqProject/NEWPROJECT_PAPERS/Classical paper/DE_Comparison of methods to detect differentially/BAY_scale_10/SAVER_ISLAM_BETA.RData")


MAST_RE_LIST<-list(MAST_bay=apply(MAST_bay_mat,1,median),MAST_SCnorm=MAST_SCnorm$adjpval,MAST_saver=MAST_saver$adjpval,MAST_scran=MAST_scran$adjpval,MAST_rpm=MAST_rpm$adjpval,MAST_tmm=MAST_tmm$adjpval,MAST_deseq=MAST_deseq$adjpval)

save(MAST_RE_LIST,file="E:/RNAseqProject/NEWPROJECT_PAPERS/Classical paper/DE_Comparison of methods to detect differentially/BAY_scale_10/FINAL/MAST_RE_LIST.RData")

##wilcox.test#######


#no need to run again
system.time(tstat_bay<-tStatAnalysis_2groups_2(cells=BAY_LL_out$Bay_array_list$`Group 1`,ctrls=BAY_LL_out$Bay_array_list$`Group 2`, list_mode=NULL, verbose=T, plotFDR = FALSE))

system.time(tstat_scnorm<-tStatAnalysis_2groups_2(cells=SCnorm_out@metadata$NormalizedData[,CONDITION==1],ctrls=SCnorm_out@metadata$NormalizedData[,CONDITION==2], list_mode=NULL, verbose=T, plotFDR = FALSE))

system.time(tstat_saver<-tStatAnalysis_2groups_2(cells=saver_islam$estimate[,CONDITION==1],ctrls=saver_islam$estimate[,CONDITION==2], list_mode=NULL, verbose=T, plotFDR = FALSE))

system.time(tstat_scran<-tStatAnalysis_2groups_2(cells=Scran_norm[,CONDITION==1],ctrls=Scran_norm[,CONDITION==2], list_mode=NULL, verbose=T, plotFDR = FALSE))

system.time(tstat_tmm<-tStatAnalysis_2groups_2(cells=TMM_norm[,CONDITION==1],ctrls=TMM_norm[,CONDITION==2], list_mode=NULL, verbose=T, plotFDR = FALSE))


system.time(tstat_rpm<-tStatAnalysis_2groups_2(cells=rpm_norm[,CONDITION==1],ctrls=rpm_norm[,CONDITION==2], list_mode=NULL, verbose=T, plotFDR = FALSE))

system.time(tstat_deseq<-tStatAnalysis_2groups_2(cells=DESeq_norm[,CONDITION==1],ctrls=DESeq_norm[,CONDITION==2], list_mode=NULL, verbose=T, plotFDR = FALSE))




##wilcox.test load results
load("E:/RNAseqProject/NEWPROJECT_PAPERS/Classical paper/DE_Comparison of methods to detect differentially/BAY_scale_10/TSTAT_explore/tstat_othernorm.RData")




#######
#TFDR 2, PValue 3, PVAL_fdr 5
metric<-5

tstat_bay2<-do.call(cbind,lapply(tstat_bay,function(x){return(x[[metric]])}))
tstat_bay2<-apply(tstat_bay2,1,median)

tstat_scnorm2<-do.call(cbind,lapply(tstat_scnorm,function(x){return(x[[metric]])}))
tstat_scnorm2<-apply(tstat_scnorm2,1,median)


tstat_saver2<-do.call(cbind,lapply(tstat_saver,function(x){return(x[[metric]])}))
tstat_saver2<-apply(tstat_saver2,1,median)

tstat_tmm2<-do.call(cbind,lapply(tstat_tmm,function(x){return(x[[metric]])}))
tstat_tmm2<-apply(tstat_tmm2,1,median)

tstat_rpm2<-do.call(cbind,lapply(tstat_rpm,function(x){return(x[[metric]])}))
tstat_rpm2<-apply(tstat_rpm2,1,median)

tstat_scran2<-do.call(cbind,lapply(tstat_scran,function(x){return(x[[metric]])}))
tstat_scran2<-apply(tstat_scran2,1,median)

tstat_deseq2<-do.call(cbind,lapply(tstat_deseq,function(x){return(x[[metric]])}))
tstat_deseq2<-apply(tstat_deseq2,1,median)

W_RE_LIST<-list(TSTAT_bay=tstat_bay2,TSTAT_scnorm=tstat_scnorm2,TSTAT_saver=tstat_saver2,TSTAT_scran=tstat_scran2,TSTAT_rpm=tstat_rpm2,TSTAT_tmm=tstat_tmm2,TSTAT_deseq=tstat_deseq2)

save(tstat_bay,tstat_scnorm,tstat_saver,tstat_scran,tstat_tmm,tstat_rpm,tstat_deseq,tstat_bay2,tstat_scnorm2,tstat_saver2,tstat_scran2,tstat_tmm2,tstat_rpm2,tstat_deseq2,file="E:/RNAseqProject/NEWPROJECT_PAPERS/Classical paper/DE_Comparison of methods to detect differentially/BAY_scale_10/TSTAT_explore/tstat_othernorm.RData")





library(foreach)


mmme<-'MAST'
mmme<-'wilcox.test'


auc_vec<-NULL
if(mmme=='MAST'){

  Input_re_list<-MAST_RE_LIST
}else if(mmme=='wilcox.test'){
  Input_re_list<-W_RE_LIST
}





TRUE_LABEL_input<-TRUE_LABEL


TRUE_LABEL_input[TRUE_LABEL_input==0]=3
TRUE_LABEL_input[TRUE_LABEL_input==1]=0
TRUE_LABEL_input[TRUE_LABEL_input==3]=1


library(ROCR)
list_pref<-foreach(i=1:length(Input_re_list))%do%{
  pred_MAST <- prediction(Input_re_list[[i]], TRUE_LABEL_input)
  perf_MAST <- performance( pred_MAST, "tpr", "fpr" )

  auc_temp<-performance( pred_MAST, measure='auc' )
  auc_temp<-auc_temp@y.values[[1]]
  auc_vec<-c(auc_vec,auc_temp)
  return(perf_MAST)
}
method_vec<-c('bayNorm','SCnorm','SAVER','scran','RPM','TMM','DESeq')
col_vec<-seq(1,length(method_vec))
ROC_fun(list_pref=list_pref,vec_auc=auc_vec,method_vec=method_vec,col_vec=col_vec,MAIN=paste('DE detection method:', mmme))
abline(0,1)
